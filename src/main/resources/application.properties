spring.datasource.url= jdbc:postgresql://localhost:5432/compentency
spring.datasource.username= postgres
spring.datasource.password= postgres

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update


user.read.api = https://aastrika-stage.tarento.com/api/user/v2/read/
content.read.api = https://aastrika-stage.tarento.com/api/content/v1/read/
generate.token = https://aastrika-stage.tarento.com/auth/realms/sunbird/protocol/openid-connect/token
verify.token = https://aastrika-stage.tarento.com/auth/realms/sunbird/protocol/openid-connect/userinfo

kafka.bootstrapServers = localhost:9092
kafka.topic = dev.issue.certificate.request
kafka.groupID = dev-activity-aggregate-updater-group

get.hierarchy=https://sphere.aastrika.org/api/private/content/v3/hierarchy/
Api.key=bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJYUkZWVDBidDlBNGdsWm5uSUF5d1BJYWFzdjRReGFHWSJ9.APB-Ma_1l_R5l0xRddDhhlYkxBxxwZzcQofyhoif2bE
get.entityById = http://localhost:8083/getEntityById/
passbook.update.url = https://aastrika-stage.tarento.com/api/user/v1/passbook

server.port = 8087


#logging.level.org.springframework=OFF
#logging.level.root=OFF
#logging.level.org.springframework.web=ERROR